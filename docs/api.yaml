swagger: '2.0'
host: localhost:3344
basePath: /
tags:
- name: Ping
  description: Ping
- name: Authorization
  description: Auth-Controller
- name: User
  description: User-Controller
- name: Subscribe
  description: Sub-Controller
- name: Video
  description: Video-Controller
- name: Raw
  description: Raw-Controller
- name: Administration
  description: '*-Controller'
info:
  title: vid backend
  description: Backend of repo https://github.com/vidorg/vid_vue
  version: '1.1'
  termsOfService: https://github.com/vidorg
  license:
    name: MIT
    url: https://github.com/vidorg/vid_backend/blob/master/LICENSE
  contact: {}
securityDefinitions:
  Jwt:
    type: apiKey
    name: Authorization
    in: header
paths:
  /v1/auth/login:
    post:
      operationId: v1-auth-login-post
      summary: 登录
      tags:
      - Authorization
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: param
        in: body
        type: object
        required: true
        allowEmptyValue: false
        description: 登录请求参数
        schema:
          $ref: '#/definitions/LoginParam'
      security: []
      responses:
        '400':
          description: |-
            "request param error"
        '401':
          description: |-
            "password error"
        '404':
          description: |-
            "user not found"
        '500':
          description: |-
            "login failed"
        '200':
          schema:
            $ref: '#/definitions/LoginDtoResult'
          examples:
            application/json: |-
              {
                "code": 200,
                "message": "success",
                "data": {
                  "user": {
                    "uid": 1,
                    "username": "admin",
                    "sex": "male",
                    "profile": "Demo admin profile",
                    "avatar_url": "http://localhost:3344/v1/raw/image/avatar.jpg",
                    "birth_time": "2020-01-10",
                    "authority": "admin",
                    "phone_number": "13512345678",
                    "register_time": "2020-01-10 00:30:49"
                  },
                  "token": "Bearer xxx",
                  "expire": 604800
                }
              }
  /v1/auth/register:
    post:
      operationId: v1-auth-register-post
      summary: 注册
      tags:
      - Authorization
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: param
        in: body
        type: object
        required: true
        allowEmptyValue: false
        description: 注册请求参数
        schema:
          $ref: '#/definitions/RegisterParam'
      security: []
      responses:
        '400':
          description: |-
            "request param error", "request format error"
        '500':
          description: |-
            "username has been used", "register failed"
        '201':
          schema:
            $ref: '#/definitions/UserDtoResult'
          examples:
            application/json: |-
              {
                "code": 201,
                "message": "created",
                "data": {
                  "uid": 1,
                  "username": "admin",
                  "sex": "male",
                  "profile": "Demo admin profile",
                  "avatar_url": "http://localhost:3344/v1/raw/image/avatar.jpg",
                  "birth_time": "2020-01-10",
                  "authority": "admin",
                  "phone_number": "13512345678",
                  "register_time": "2020-01-10 00:30:49"
                }
              }
  /v1/auth/:
    get:
      operationId: v1-auth-get
      summary: 当前登录用户
      tags:
      - Authorization
      consumes:
      - application/json
      produces:
      - application/json
      security:
      - Jwt: []
      responses:
        '401':
          description: |-
            "unauthorized user", "token has expired", "authorized user not found"
        '200':
          schema:
            $ref: '#/definitions/UserDtoResult'
          examples:
            application/json: |-
              {
                "code": 200,
                "message": "success",
                "data": {
                  "uid": 1,
                  "username": "admin",
                  "sex": "male",
                  "profile": "Demo admin profile",
                  "avatar_url": "http://localhost:3344/v1/raw/image/avatar.jpg",
                  "birth_time": "2020-01-10",
                  "authority": "admin",
                  "phone_number": "13512345678",
                  "register_time": "2020-01-10 00:30:49"
                }
              }
  /v1/auth/logout:
    post:
      operationId: v1-auth-logout-post
      summary: 注销
      tags:
      - Authorization
      consumes:
      - application/json
      produces:
      - application/json
      security:
      - Jwt: []
      responses:
        '401':
          description: |-
            "unauthorized user", "token has expired", "authorized user not found"
        '500':
          description: |-
            "logout failed"
        '200':
          schema:
            $ref: '#/definitions/Result'
          examples:
            application/json: |-
              {
                "code": 200,
                "message": "success"
              }
  /v1/auth/password:
    put:
      operationId: v1-auth-password-put
      summary: 修改密码
      tags:
      - Authorization
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: param
        in: body
        type: object
        required: true
        allowEmptyValue: false
        description: 修改密码请求参数
        schema:
          $ref: '#/definitions/PassParam'
      security:
      - Jwt: []
      responses:
        '401':
          description: |-
            "unauthorized user", "token has expired", "authorized user not found"
        '400':
          description: |-
            "request param error", "request format error"
        '404':
          description: |-
            "user not found"
        '500':
          description: |-
            "update password failed"
        '200':
          schema:
            $ref: '#/definitions/Result'
          examples:
            application/json: |-
              {
                "code": 200,
                "message": "success"
              }
  /v1/raw/image:
    post:
      operationId: v1-raw-image-post
      summary: 上传图片
      tags:
      - Raw
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: image
        in: formData
        type: file
        required: true
        allowEmptyValue: false
        description: 上传的图片，大小限制在2M，允许后缀名为 {.jpg, .jpeg, .png, .bmp, .gif}
      security:
      - Jwt: []
      responses:
        '401':
          description: |-
            "unauthorized user", "token has expired", "authorized user not found"
        '400':
          description: |-
            "request param error", "image type not supported"
        '413':
          description: |-
            "request body too large"
        '500':
          description: |-
            "image save failed"
        '200':
          schema:
            $ref: '#/definitions/ImageDtoResult'
          examples:
            application/json: |-
              {
                "code": 200,
                "message": "success",
                "data": {
                  "url": "http://localhost:3344/v1/raw/image/20200110130323908439.jpg",
                  "size": 381952
                }
              }
  /v1/raw/image/{filename}:
    get:
      operationId: v1-raw-image-filename-get
      summary: 获取图片
      tags:
      - Raw
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: filename
        in: path
        type: string
        required: true
        allowEmptyValue: false
        description: 图片文件名
      security: []
      responses:
        '404':
          description: |-
            "image not found"
        '200':
          headers:
            Content-Type:
              type: string
              description: image/jpeg
  /v1/user/{uid}/subscriber?page:
    get:
      operationId: v1-user-uid-subscriber-page-get
      summary: 查询用户粉丝
      tags:
      - Subscribe
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: page
        in: query
        type: integer
        required: false
        allowEmptyValue: false
        description: 当前页
        default: 1
      - name: uid
        in: path
        type: integer
        required: true
        allowEmptyValue: false
        description: 用户id
      security: []
      responses:
        '400':
          description: |-
            "request param error"
        '404':
          description: |-
            "user not found"
        '200':
          schema:
            $ref: '#/definitions/UserDtoPageResult'
          examples:
            application/json: |-
              {
                "code": 200,
                "message": "success",
                "data": {
                  "count": 1,
                  "page": 1,
                  "data": [
                    {
                      "uid": 1,
                      "username": "admin",
                      "sex": "male",
                      "profile": "Demo admin profile",
                      "avatar_url": "http://localhost:3344/v1/raw/image/avatar.jpg",
                      "birth_time": "2020-01-10",
                      "authority": "admin",
                      "phone_number": "13512345678",
                      "register_time": "2020-01-10 00:30:49"
                    }
                  ]
                }
              }
  /v1/user/{uid}/subscribing?page:
    get:
      operationId: v1-user-uid-subscribing-page-get
      summary: 查询用户关注
      tags:
      - Subscribe
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: page
        in: query
        type: integer
        required: false
        allowEmptyValue: false
        description: 当前页
        default: 1
      - name: uid
        in: path
        type: integer
        required: true
        allowEmptyValue: false
        description: 用户id
      security: []
      responses:
        '400':
          description: |-
            "request param error"
        '404':
          description: |-
            "user not found"
        '200':
          schema:
            $ref: '#/definitions/UserDtoPageResult'
          examples:
            application/json: |-
              {
                "code": 200,
                "message": "success",
                "data": {
                  "count": 1,
                  "page": 1,
                  "data": [
                    {
                      "uid": 1,
                      "username": "admin",
                      "sex": "male",
                      "profile": "Demo admin profile",
                      "avatar_url": "http://localhost:3344/v1/raw/image/avatar.jpg",
                      "birth_time": "2020-01-10",
                      "authority": "admin",
                      "phone_number": "13512345678",
                      "register_time": "2020-01-10 00:30:49"
                    }
                  ]
                }
              }
  /v1/user/subscribing:
    put:
      operationId: v1-user-subscribing-put
      summary: 关注用户
      tags:
      - Subscribe
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: param
        in: body
        type: object
        required: true
        allowEmptyValue: false
        description: 关注请求参数
        schema:
          $ref: '#/definitions/SubParam'
      security:
      - Jwt: []
      responses:
        '401':
          description: |-
            "unauthorized user", "token has expired", "authorized user not found"
        '400':
          description: |-
            "request param error", "request format error", "subscribe oneself invalid"
        '404':
          description: |-
            "user not found"
        '500':
          description: |-
            "subscribe failed"
        '200':
          schema:
            $ref: '#/definitions/Result'
          examples:
            application/json: |-
              {
                "code": 200,
                "message": "success"
              }
    delete:
      operationId: v1-user-subscribing-delete
      summary: 取消关注用户
      tags:
      - Subscribe
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: param
        in: body
        type: object
        required: true
        allowEmptyValue: false
        description: 关注请求参数
        schema:
          $ref: '#/definitions/SubParam'
      security:
      - Jwt: []
      responses:
        '401':
          description: |-
            "unauthorized user", "token has expired", "authorized user not found"
        '400':
          description: |-
            "request param error", "request format error"
        '404':
          description: |-
            "user not found"
        '500':
          description: |-
            "unsubscribe failed"
        '200':
          schema:
            $ref: '#/definitions/Result'
          examples:
            application/json: |-
              {
                "code": 200,
                "message": "success"
              }
  /v1/user?page:
    get:
      operationId: v1-user-page-get
      summary: 查询所有用户
      description: 管理员权限，此处可见用户手机号码
      tags:
      - User
      - Administration
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: page
        in: query
        type: integer
        required: false
        allowEmptyValue: false
        description: 当前页
        default: 1
      security:
      - Jwt: []
      responses:
        '401':
          description: |-
            "unauthorized user", "token has expired", "authorized user not found", "need admin authority"
        '200':
          schema:
            $ref: '#/definitions/UserDtoPageResult'
          examples:
            application/json: |-
              {
                "code": 200,
                "message": "success",
                "data": {
                  "count": 1,
                  "page": 1,
                  "data": [
                    {
                      "uid": 1,
                      "username": "admin",
                      "sex": "male",
                      "profile": "Demo admin profile",
                      "avatar_url": "http://localhost:3344/v1/raw/image/avatar.jpg",
                      "birth_time": "2020-01-10",
                      "authority": "admin",
                      "phone_number": "13512345678",
                      "register_time": "2020-01-10 00:30:49"
                    }
                  ]
                }
              }
  /v1/user/{uid}:
    get:
      operationId: v1-user-uid-get
      summary: 查询用户
      description: 此处可见用户手机号码
      tags:
      - User
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: uid
        in: path
        type: integer
        required: true
        allowEmptyValue: false
        description: 用户id
      security: []
      responses:
        '400':
          description: |-
            "request param error"
        '404':
          description: |-
            "user not found"
        '200':
          schema:
            $ref: '#/definitions/UserExtraDtoResult'
          examples:
            application/json: |-
              {
                "code": 200,
                "message": "success",
                "data": {
                  "user": {
                    "uid": 1,
                    "username": "admin",
                    "sex": "male",
                    "profile": "Demo admin profile",
                    "avatar_url": "http://localhost:3344/v1/raw/image/avatar.jpg",
                    "birth_time": "2020-01-10",
                    "authority": "admin",
                    "phone_number": "13512345678",
                    "register_time": "2020-01-10 00:30:49"
                  },
                  "extra": {
                    "subscribing_cnt": 3,
                    "subscriber_cnt": 2,
                    "video_cnt": 3
                  }
                }
              }
  /v1/user/:
    put:
      operationId: v1-user-put
      summary: 更新用户
      tags:
      - User
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: param
        in: body
        type: object
        required: true
        allowEmptyValue: false
        description: 用户请求参数
        schema:
          $ref: '#/definitions/UserParam'
      security:
      - Jwt: []
      responses:
        '401':
          description: |-
            "unauthorized user", "token has expired", "authorized user not found"
        '400':
          description: |-
            "request param error", "request format error", "username has been used"
        '404':
          description: |-
            "user not found"
        '500':
          description: |-
            "user update failed"
        '200':
          schema:
            $ref: '#/definitions/UserDtoResult'
          examples:
            application/json: |-
              {
                "code": 200,
                "message": "success",
                "data": {
                  "uid": 1,
                  "username": "admin",
                  "sex": "male",
                  "profile": "Demo admin profile",
                  "avatar_url": "http://localhost:3344/v1/raw/image/avatar.jpg",
                  "birth_time": "2020-01-10",
                  "authority": "admin",
                  "phone_number": "13512345678",
                  "register_time": "2020-01-10 00:30:49"
                }
              }
    delete:
      operationId: v1-user-delete
      summary: 删除用户
      tags:
      - User
      consumes:
      - application/json
      produces:
      - application/json
      security:
      - Jwt: []
      responses:
        '401':
          description: |-
            "unauthorized user", "token has expired", "authorized user not found"
        '404':
          description: |-
            user not found
        '500':
          description: |-
            user delete failed
        '200':
          schema:
            $ref: '#/definitions/Result'
          examples:
            application/json: |-
              {
                "code": 200,
                "message": "success"
              }
  /v1/user/admin/{uid}:
    put:
      operationId: v1-user-admin-uid-put
      summary: 更新用户
      description: 管理员权限
      tags:
      - User
      - Administration
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: uid
        in: path
        type: integer
        required: true
        allowEmptyValue: false
        description: 用户id
      - name: param
        in: body
        type: object
        required: true
        allowEmptyValue: false
        description: 用户请求参数
        schema:
          $ref: '#/definitions/UserParam'
      security:
      - Jwt: []
      responses:
        '401':
          description: |-
            "unauthorized user", "token has expired", "authorized user not found", "need admin authority"
        '400':
          description: |-
            "request param error", "request format error", "username has been used"
        '404':
          description: |-
            "user not found"
        '500':
          description: |-
            "user update failed"
        '200':
          schema:
            $ref: '#/definitions/UserDtoResult'
          examples:
            application/json: |-
              {
                "code": 200,
                "message": "success",
                "data": {
                  "uid": 1,
                  "username": "admin",
                  "sex": "male",
                  "profile": "Demo admin profile",
                  "avatar_url": "http://localhost:3344/v1/raw/image/avatar.jpg",
                  "birth_time": "2020-01-10",
                  "authority": "admin",
                  "phone_number": "13512345678",
                  "register_time": "2020-01-10 00:30:49"
                }
              }
    delete:
      operationId: v1-user-admin-uid-delete
      summary: 删除用户
      description: 管理员权限
      tags:
      - User
      - Administration
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: uid
        in: path
        type: integer
        required: true
        allowEmptyValue: false
        description: 用户id
      security:
      - Jwt: []
      responses:
        '401':
          description: |-
            "unauthorized user", "token has expired", "authorized user not found", "need admin authority"
        '400':
          description: |-
            "request param error"
        '404':
          description: |-
            "user not found"
        '500':
          description: |-
            "user delete failed"
        '200':
          schema:
            $ref: '#/definitions/Result'
          examples:
            application/json: |-
              {
                "code": 200,
                "message": "success"
              }
  /v1/video?page:
    get:
      operationId: v1-video-page-get
      summary: 查询所有视频
      description: 管理员权限
      tags:
      - Video
      - Administration
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: page
        in: query
        type: integer
        required: false
        allowEmptyValue: false
        description: 当前页
        default: 1
      security:
      - Jwt: []
      responses:
        '401':
          description: |-
            "unauthorized user", "token has expired", "authorized user not found", "need admin authority"
        '200':
          schema:
            $ref: '#/definitions/VideoDtoPageResult'
          examples:
            application/json: |-
              {
                "code": 200,
                "message": "success",
                "data": {
                  "count": 1,
                  "page": 1,
                  "data": [
                    {
                      "vid": 1,
                      "title": "The First Video",
                      "description": "This is the first video uploaded",
                      "video_url": "123",
                      "cover_url": "http://localhost:3344/v1/raw/image/avatar.jpg",
                      "upload_time": "2020-01-10 00:55:36",
                      "update_time": "2020-01-10 14:31:00",
                      "author": {
                        "uid": 1,
                        "username": "admin",
                        "sex": "male",
                        "profile": "Demo admin profile",
                        "avatar_url": "http://localhost:3344/v1/raw/image/avatar.jpg",
                        "birth_time": "2020-01-10",
                        "authority": "admin",
                        "phone_number": "13512345678",
                        "register_time": "2020-01-10 00:30:49"
                      }
                    }
                  ]
                }
              }
  /v1/user/{uid}/video?page:
    get:
      operationId: v1-user-uid-video-page-get
      summary: 查询用户发布的视频
      tags:
      - Video
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: page
        in: query
        type: integer
        required: false
        allowEmptyValue: false
        description: 当前页
        default: 1
      - name: uid
        in: path
        type: integer
        required: true
        allowEmptyValue: false
        description: 用户id
      security: []
      responses:
        '400':
          description: |-
            "request param error"
        '404':
          description: |-
            "user not found"
        '200':
          schema:
            $ref: '#/definitions/VideoDtoPageResult'
          examples:
            application/json: |-
              {
                "code": 200,
                "message": "success",
                "data": {
                  "count": 1,
                  "page": 1,
                  "data": [
                    {
                      "vid": 1,
                      "title": "The First Video",
                      "description": "This is the first video uploaded",
                      "video_url": "123",
                      "cover_url": "http://localhost:3344/v1/raw/image/avatar.jpg",
                      "upload_time": "2020-01-10 00:55:36",
                      "update_time": "2020-01-10 14:31:00",
                      "author": {
                        "uid": 1,
                        "username": "admin",
                        "sex": "male",
                        "profile": "Demo admin profile",
                        "avatar_url": "http://localhost:3344/v1/raw/image/avatar.jpg",
                        "birth_time": "2020-01-10",
                        "authority": "admin",
                        "phone_number": "13512345678",
                        "register_time": "2020-01-10 00:30:49"
                      }
                    }
                  ]
                }
              }
  /v1/video/{vid}:
    get:
      operationId: v1-video-vid-get
      summary: 查询视频
      description: 作者id为-1表示已删除的用户
      tags:
      - Video
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: vid
        in: path
        type: integer
        required: true
        allowEmptyValue: false
        description: 视频id
      security: []
      responses:
        '400':
          description: |-
            "request param error"
        '404':
          description: |-
            "video not found"
        '200':
          schema:
            $ref: '#/definitions/VideoDtoResult'
          examples:
            application/json: |-
              {
                "code": 200,
                "message": "success",
                "data": {
                  "vid": 1,
                  "title": "The First Video",
                  "description": "This is the first video uploaded",
                  "video_url": "123",
                  "cover_url": "http://localhost:3344/v1/raw/image/avatar.jpg",
                  "upload_time": "2020-01-10 00:55:36",
                  "update_time": "2020-01-10 14:31:00",
                  "author": {
                    "uid": 1,
                    "username": "admin",
                    "sex": "male",
                    "profile": "Demo admin profile",
                    "avatar_url": "http://localhost:3344/v1/raw/image/avatar.jpg",
                    "birth_time": "2020-01-10",
                    "authority": "admin",
                    "phone_number": "13512345678",
                    "register_time": "2020-01-10 00:30:49"
                  }
                }
              }
    post:
      operationId: v1-video-vid-post
      summary: 更新视频
      description: 管理员或者作者本人权限
      tags:
      - Video
      - Administration
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: vid
        in: path
        type: string
        required: true
        allowEmptyValue: false
        description: 视频id
      - name: param
        in: body
        type: object
        required: true
        allowEmptyValue: false
        description: 视频请求参数
        schema:
          $ref: '#/definitions/VideoParam'
      security:
      - Jwt: []
      responses:
        '401':
          description: |-
            "unauthorized user", "token has expired", "authorized user not found", "need admin authority"
        '400':
          description: |-
            "request param error", "request format error", "video has been uploaded"
        '404':
          description: |-
            "video not found"
        '500':
          description: |-
            "video update failed"
        '200':
          schema:
            $ref: '#/definitions/VideoDtoResult'
          examples:
            application/json: |-
              {
                "code": 200,
                "message": "success",
                "data": {
                  "vid": 1,
                  "title": "The First Video",
                  "description": "This is the first video uploaded",
                  "video_url": "123",
                  "cover_url": "http://localhost:3344/v1/raw/image/avatar.jpg",
                  "upload_time": "2020-01-10 00:55:36",
                  "update_time": "2020-01-10 14:31:00",
                  "author": {
                    "uid": 1,
                    "username": "admin",
                    "sex": "male",
                    "profile": "Demo admin profile",
                    "avatar_url": "http://localhost:3344/v1/raw/image/avatar.jpg",
                    "birth_time": "2020-01-10",
                    "authority": "admin",
                    "phone_number": "13512345678",
                    "register_time": "2020-01-10 00:30:49"
                  }
                }
              }
    delete:
      operationId: v1-video-vid-delete
      summary: 删除视频
      description: 管理员或者作者本人权限
      tags:
      - Video
      - Administration
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: vid
        in: path
        type: string
        required: true
        allowEmptyValue: false
        description: 视频id
      security:
      - Jwt: []
      responses:
        '401':
          description: |-
            "unauthorized user", "token has expired", "authorized user not found", "need admin authority"
        '400':
          description: |-
            "request param error"
        '404':
          description: |-
            "video not found"
        '500':
          description: |-
            "video delete failed"
        '200':
          schema:
            $ref: '#/definitions/Result'
          examples:
            application/json: |-
              {
                "code": 200,
                "message": "success"
              }
  /v1/video/:
    post:
      operationId: v1-video-post
      summary: 新建视频
      tags:
      - Video
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: param
        in: body
        type: object
        required: true
        allowEmptyValue: false
        description: 视频请求参数
        schema:
          $ref: '#/definitions/VideoParam'
      security:
      - Jwt: []
      responses:
        '401':
          description: |-
            "unauthorized user", "token has expired", "authorized user not found"
        '400':
          description: |-
            "request param error", "request format error", "video has been uploaded"
        '500':
          description: |-
            "video insert failed"
        '201':
          schema:
            $ref: '#/definitions/VideoDtoResult'
          examples:
            application/json: |-
              {
                "code": 201,
                "message": "created",
                "data": {
                  "vid": 1,
                  "title": "The First Video",
                  "description": "This is the first video uploaded",
                  "video_url": "123",
                  "cover_url": "http://localhost:3344/v1/raw/image/avatar.jpg",
                  "upload_time": "2020-01-10 00:55:36",
                  "update_time": "2020-01-10 14:31:00",
                  "author": {
                    "uid": 1,
                    "username": "admin",
                    "sex": "male",
                    "profile": "Demo admin profile",
                    "avatar_url": "http://localhost:3344/v1/raw/image/avatar.jpg",
                    "birth_time": "2020-01-10",
                    "authority": "admin",
                    "phone_number": "13512345678",
                    "register_time": "2020-01-10 00:30:49"
                  }
                }
              }
  /ping:
    get:
      operationId: ping-get
      summary: Ping
      description: Ping
      tags:
      - Ping
      consumes:
      - application/json
      produces:
      - application/json
      security: []
      responses:
        '200':
          description: |-
            "OK"
          headers:
            Content-Type:
              type: string
              description: application/json; charset=utf-8
          schema:
            $ref: '#/definitions/Ping'
          examples:
            application/json: |-
              {
                "ping": "pong"
              }
definitions:
  Result:
    title: Result
    description: 返回统一响应结果
    type: object
    required:
    - code
    - message
    properties:
      code:
        description: 响应码
        type: integer
        allowEmptyValue: false
      message:
        description: 状态信息
        type: string
        allowEmptyValue: false
  UserDtoResult:
    title: UserDtoResult
    description: 返回用户信息
    type: object
    required:
    - code
    - message
    - data
    properties:
      code:
        description: 返回响应码
        type: integer
        allowEmptyValue: false
      message:
        description: 返回信息
        type: string
        allowEmptyValue: false
      data:
        description: 返回数据
        type: object
        allowEmptyValue: false
        $ref: '#/definitions/_UserDto'
  UserDtoPageResult:
    title: UserDtoPageResult
    description: 返回用户分页信息
    type: object
    required:
    - code
    - message
    - data
    properties:
      code:
        description: 返回响应码
        type: integer
        allowEmptyValue: false
      message:
        description: 返回信息
        type: string
        allowEmptyValue: false
      data:
        description: 返回数据
        type: object
        allowEmptyValue: false
        $ref: '#/definitions/_UserDtoPage'
  _UserDtoPage:
    title: _UserDtoPage
    description: 用户分页信息
    type: object
    required:
    - total
    - message
    - data
    properties:
      total:
        description: 数据总量
        type: integer
        allowEmptyValue: false
      message:
        description: 当前页
        type: string
        allowEmptyValue: false
      data:
        description: 返回数据
        type: array
        allowEmptyValue: false
        items:
          $ref: '#/definitions/_UserDto'
  LoginDtoResult:
    title: LoginDtoResult
    description: 登录信息
    type: object
    required:
    - code
    - message
    - data
    properties:
      code:
        description: 返回响应码
        type: integer
        allowEmptyValue: false
      message:
        description: 返回信息
        type: string
        allowEmptyValue: false
      data:
        description: 返回数据
        type: object
        allowEmptyValue: false
        $ref: '#/definitions/_LoginDto'
  _LoginDto:
    title: _LoginDto
    description: 登录信息
    type: object
    required:
    - user
    - token
    - expire
    properties:
      user:
        description: 用户信息
        type: object
        allowEmptyValue: false
        $ref: '#/definitions/_UserDto'
      token:
        description: 登录令牌
        type: string
        allowEmptyValue: false
      expire:
        description: 登录有效期，单位为秒
        type: integer
        allowEmptyValue: false
  _UserDto:
    title: _UserDto
    description: 用户信息
    type: object
    required:
    - uid
    - username
    - sex
    - profile
    - avatar_url
    - birth_time
    - authority
    - phone_number
    - register_time
    properties:
      uid:
        description: 用户id
        type: integer
        allowEmptyValue: false
      username:
        description: 用户名
        type: string
        allowEmptyValue: false
      sex:
        description: 用户性别，枚举 {male, female, unknown}
        type: string
        allowEmptyValue: false
      profile:
        description: 用户简介
        type: string
        allowEmptyValue: true
      avatar_url:
        description: 用户头像
        type: string
        allowEmptyValue: false
      birth_time:
        description: 用户生日，固定格式为 2000-01-01
        type: string
        allowEmptyValue: false
      authority:
        description: 用户权限，枚举 {normal, admin}
        type: string
        allowEmptyValue: false
      phone_number:
        description: 用户手机号码，部分接口可见
        type: string
        allowEmptyValue: false
      register_time:
        description: 用户注册时间，固定格式为 2000-01-01 00:00:00
        type: string
        allowEmptyValue: false
  UserExtraDtoResult:
    title: UserExtraDtoResult
    description: 返回用户与数量信息
    type: object
    required:
    - code
    - message
    - data
    properties:
      code:
        description: 返回响应码
        type: integer
        allowEmptyValue: false
      message:
        description: 返回信息
        type: string
        allowEmptyValue: false
      data:
        description: 返回数据
        type: object
        allowEmptyValue: false
        $ref: '#/definitions/_UserAndExtraDto'
  _UserAndExtraDto:
    title: _UserAndExtraDto
    description: 用户与数量信息
    type: object
    required:
    - user
    - extra
    properties:
      user:
        description: 用户信息
        type: object
        allowEmptyValue: false
        $ref: '#/definitions/_UserDto'
      extra:
        description: 用户额外信息
        type: object
        allowEmptyValue: false
        $ref: '#/definitions/_UserExtraDto'
  ImageDtoResult:
    title: ImageDtoResult
    description: 返回上传图片信息
    type: object
    required:
    - code
    - message
    - data
    properties:
      code:
        description: 返回响应码
        type: integer
        allowEmptyValue: false
      message:
        description: 返回信息
        type: string
        allowEmptyValue: false
      data:
        description: 返回数据
        type: object
        allowEmptyValue: false
        $ref: '#/definitions/_ImageDto'
  _ImageDto:
    title: _ImageDto
    description: 上传图片信息
    type: object
    required:
    - url
    - size
    properties:
      url:
        description: 图片链接
        type: string
        allowEmptyValue: false
      size:
        description: 图片大小，单位为字节
        type: integer
        allowEmptyValue: false
  _UserExtraDto:
    title: _UserExtraDto
    description: 用户额外信息
    type: object
    required:
    - subscribing_cnt
    - subscriber_cnt
    - video_cnt
    properties:
      subscribing_cnt:
        description: 用户关注数量
        type: integer
        allowEmptyValue: false
      subscriber_cnt:
        description: 用户粉丝数量
        type: integer
        allowEmptyValue: false
      video_cnt:
        description: 用户视频数量
        type: integer
        allowEmptyValue: false
  VideoDtoResult:
    title: VideoDtoResult
    description: 返回视频信息
    type: object
    required:
    - code
    - message
    - data
    properties:
      code:
        description: 返回响应码
        type: integer
        allowEmptyValue: false
      message:
        description: 返回信息
        type: string
        allowEmptyValue: false
      data:
        description: 返回数据
        type: object
        allowEmptyValue: false
        $ref: '#/definitions/_VideoDto'
  VideoDtoPageResult:
    title: VideoDtoPageResult
    description: 返回视频分页信息
    type: object
    required:
    - code
    - message
    - data
    properties:
      code:
        description: 返回响应码
        type: integer
        allowEmptyValue: false
      message:
        description: 返回信息
        type: string
        allowEmptyValue: false
      data:
        description: 返回数据
        type: object
        allowEmptyValue: false
        $ref: '#/definitions/_VideoDtoPage'
  _VideoDtoPage:
    title: _VideoDtoPage
    description: 视频分页信息
    type: object
    required:
    - total
    - message
    - data
    properties:
      total:
        description: 数据总量
        type: integer
        allowEmptyValue: false
      message:
        description: 当前页
        type: string
        allowEmptyValue: false
      data:
        description: 返回数据
        type: array
        allowEmptyValue: false
        items:
          $ref: '#/definitions/_VideoDto'
  _VideoDto:
    title: _VideoDto
    description: 视频信息
    type: object
    required:
    - vid
    - title
    - description
    - video_url
    - cover_url
    - upload_time
    - update_time
    - author
    properties:
      vid:
        description: 视频id
        type: integer
        allowEmptyValue: false
      title:
        description: 视频标题
        type: string
        allowEmptyValue: false
      description:
        description: 标题简介
        type: string
        allowEmptyValue: false
      video_url:
        description: 视频资源链接
        type: string
        allowEmptyValue: false
      cover_url:
        description: 视频封面连接
        type: string
        allowEmptyValue: false
      upload_time:
        description: 视频上传时间，固定格式为 2000-01-01 00:00:00
        type: string
        allowEmptyValue: false
      update_time:
        description: 视频修改时间，固定格式为 2000-01-01 00:00:00
        type: string
        allowEmptyValue: false
      author:
        description: 视频作者，用户id为-1表示用户已删除
        type: object
        allowEmptyValue: false
        $ref: '#/definitions/_UserDto'
  LoginParam:
    title: LoginParam
    description: 登录请求参数
    type: object
    required:
    - username
    - password
    properties:
      username:
        description: 用户名
        type: string
        allowEmptyValue: false
      password:
        description: 密码
        type: string
        allowEmptyValue: false
      expire:
        description: 登录有效期，默认为七天
        type: integer
        allowEmptyValue: false
        example: 604800
  RegisterParam:
    title: RegisterParam
    description: 注册请求参数
    type: object
    required:
    - username
    - password
    properties:
      username:
        description: 用户名，长度在 [5, 30] 之间
        type: string
        allowEmptyValue: false
      password:
        description: 密码，长度在 [8, 30] 之间
        type: string
        allowEmptyValue: false
  PassParam:
    title: PassParam
    description: 修改密码请求参数
    type: object
    required:
    - password
    properties:
      password:
        description: 密码，长度在 [8, 30] 之间
        type: string
        allowEmptyValue: false
  SubParam:
    title: SubParam
    description: 关注请求参数
    type: object
    required:
    - to
    properties:
      to:
        description: 用户id
        type: integer
        allowEmptyValue: false
        example: 1
  UserParam:
    title: UserParam
    description: 用户请求参数
    type: object
    required:
    - username
    - profile
    - sex
    - birth_time
    - phone_number
    - avatar_url
    properties:
      username:
        description: 用户名，长度在 [5, 30] 之间
        type: string
        allowEmptyValue: false
      profile:
        description: 用户简介，长度在 [0, 255] 之间
        type: string
        allowEmptyValue: true
      sex:
        description: 用户性别，允许值为 {male, female, unknown}
        type: string
        allowEmptyValue: false
      birth_time:
        description: 用户生日，固定格式为 2000-01-01
        type: string
        allowEmptyValue: false
      phone_number:
        description: 用户手机号码，长度为 11，仅限中国大陆手机号码
        type: string
        allowEmptyValue: false
      avatar_url:
        description: 用户头像链接
        type: string
        allowEmptyValue: false
  VideoParam:
    title: VideoParam
    description: 视频请求参数
    type: object
    required:
    - title
    - description
    - cover_url
    - video_url
    properties:
      title:
        description: 视频标题，长度在 [1, 100] 之间
        type: string
        allowEmptyValue: false
      description:
        description: 视频简介，长度在 [0, 255] 之间
        type: string
        allowEmptyValue: true
      cover_url:
        description: 视频封面链接
        type: string
        allowEmptyValue: false
      video_url:
        description: 视频资源链接
        type: string
        allowEmptyValue: false
  Ping:
    title: Ping
    description: Ping
    type: object
    required:
    - ping
    properties:
      ping:
        description: pong
        type: string
        allowEmptyValue: false
        example: pong
