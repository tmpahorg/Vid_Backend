{
  "swagger": "2.0",
  "host": "localhost:3344",
  "basePath": "/",
  "info": {
    "title": "vid backend",
    "description": "Vid backend built by golang/gin",
    "version": "1.2",
    "termsOfService": "https://github.com/vidorg/vid_backend/issues",
    "license": {
      "name": "MIT",
      "url": "https://github.com/vidorg/vid_backend/blob/master/LICENSE"
    },
    "contact": {
      "name": "vidorg",
      "url": "https://github.com/vidorg"
    }
  },
  "tags": [
    {
      "name": "Authorization",
      "description": "auth-controller"
    },
    {
      "name": "User",
      "description": "user-controller"
    },
    {
      "name": "Subscribe",
      "description": "subscribe-controller"
    },
    {
      "name": "Video",
      "description": "video-controller"
    },
    {
      "name": "Favorite",
      "description": "favorite-controller"
    },
    {
      "name": "Rbac",
      "description": "rbac-controller"
    },
    {
      "name": "Administration",
      "description": "*-controller"
    }
  ],
  "securityDefinitions": {
    "Jwt": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/v1/auth/activate": {
      "post": {
        "summary": "send email to activate account",
        "operationId": "-v1-auth-activate-post",
        "tags": [
          "Authorization"
        ],
        "security": [
          {
            "Jwt": []
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "Result",
              "$ref": "#/definitions/Result"
            }
          }
        }
      }
    },
    "/v1/auth/login": {
      "post": {
        "summary": "login",
        "operationId": "-v1-auth-login-post",
        "tags": [
          "Authorization"
        ],
        "parameters": [
          {
            "name": "param",
            "in": "body",
            "required": true,
            "description": "login parameter",
            "schema": {
              "originRef": "LoginParam",
              "$ref": "#/definitions/LoginParam"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "_Result<LoginDto>",
              "$ref": "#/definitions/_Result<LoginDto>"
            }
          }
        }
      }
    },
    "/v1/auth/logout": {
      "delete": {
        "summary": "logout",
        "operationId": "-v1-auth-logout-delete",
        "tags": [
          "Authorization"
        ],
        "security": [
          {
            "Jwt": []
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "Result",
              "$ref": "#/definitions/Result"
            }
          }
        }
      }
    },
    "/v1/auth/password": {
      "put": {
        "summary": "update password",
        "operationId": "-v1-auth-password-put",
        "tags": [
          "Authorization"
        ],
        "security": [
          {
            "Jwt": []
          }
        ],
        "parameters": [
          {
            "name": "param",
            "in": "body",
            "required": true,
            "description": "update password parameter",
            "schema": {
              "originRef": "UpdatePasswordParam",
              "$ref": "#/definitions/UpdatePasswordParam"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "Result",
              "$ref": "#/definitions/Result"
            }
          }
        }
      }
    },
    "/v1/auth/register": {
      "post": {
        "summary": "register",
        "operationId": "-v1-auth-register-post",
        "tags": [
          "Authorization"
        ],
        "parameters": [
          {
            "name": "param",
            "in": "body",
            "required": true,
            "description": "register parameter",
            "schema": {
              "originRef": "RegisterParam",
              "$ref": "#/definitions/RegisterParam"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "originRef": "Result",
              "$ref": "#/definitions/Result"
            }
          }
        }
      }
    },
    "/v1/auth/spec/{spec}": {
      "get": {
        "summary": "activate account with spec",
        "operationId": "-v1-auth-spec-spec-get",
        "tags": [
          "Authorization"
        ],
        "parameters": [
          {
            "name": "spec",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "spec code"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "Result",
              "$ref": "#/definitions/Result"
            }
          }
        }
      }
    },
    "/v1/auth/user": {
      "get": {
        "summary": "current user",
        "operationId": "-v1-auth-user-get",
        "tags": [
          "Authorization"
        ],
        "security": [
          {
            "Jwt": []
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "_Result<UserDto>",
              "$ref": "#/definitions/_Result<UserDto>"
            }
          }
        }
      }
    },
    "/v1/rbac/policy": {
      "delete": {
        "summary": "Delete policy",
        "operationId": "-v1-rbac-policy-delete",
        "tags": [
          "Rbac",
          "Administration"
        ],
        "security": [
          {
            "Jwt": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "delete policy param",
            "schema": {
              "originRef": "RbacPolicyParam",
              "$ref": "#/definitions/RbacPolicyParam"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "Result",
              "$ref": "#/definitions/Result"
            }
          }
        }
      },
      "post": {
        "summary": "Insert policy",
        "operationId": "-v1-rbac-policy-post",
        "tags": [
          "Rbac",
          "Administration"
        ],
        "security": [
          {
            "Jwt": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "insert policy param",
            "schema": {
              "originRef": "RbacPolicyParam",
              "$ref": "#/definitions/RbacPolicyParam"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "originRef": "Result",
              "$ref": "#/definitions/Result"
            }
          }
        }
      }
    },
    "/v1/rbac/rule": {
      "get": {
        "summary": "Get rbac rules",
        "operationId": "-v1-rbac-rule-get",
        "tags": [
          "Rbac",
          "Administration"
        ],
        "security": [
          {
            "Jwt": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "current page",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "page size",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "_Result<_Page<RbacRuleDto>>",
              "$ref": "#/definitions/_Result<_Page<RbacRuleDto>>"
            }
          }
        }
      }
    },
    "/v1/rbac/subject": {
      "delete": {
        "summary": "Delete subject",
        "operationId": "-v1-rbac-subject-delete",
        "tags": [
          "Rbac",
          "Administration"
        ],
        "security": [
          {
            "Jwt": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "delete subject param",
            "schema": {
              "originRef": "RbacSubjectParam",
              "$ref": "#/definitions/RbacSubjectParam"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "Result",
              "$ref": "#/definitions/Result"
            }
          }
        }
      },
      "post": {
        "summary": "Insert subject",
        "operationId": "-v1-rbac-subject-post",
        "tags": [
          "Rbac",
          "Administration"
        ],
        "security": [
          {
            "Jwt": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "insert subject param",
            "schema": {
              "originRef": "RbacSubjectParam",
              "$ref": "#/definitions/RbacSubjectParam"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "originRef": "Result",
              "$ref": "#/definitions/Result"
            }
          }
        }
      }
    },
    "/v1/rbac/user/{uid}": {
      "put": {
        "summary": "Change user role",
        "operationId": "-v1-rbac-user-uid-put",
        "tags": [
          "Rbac",
          "Administration"
        ],
        "security": [
          {
            "Jwt": []
          }
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "user id",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "change role param",
            "schema": {
              "originRef": "ChangeUserRoleParam",
              "$ref": "#/definitions/ChangeUserRoleParam"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "Result",
              "$ref": "#/definitions/Result"
            }
          }
        }
      }
    },
    "/v1/user": {
      "delete": {
        "summary": "delete a user",
        "operationId": "-v1-user-delete",
        "tags": [
          "User"
        ],
        "security": [
          {
            "Jwt": []
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "Result",
              "$ref": "#/definitions/Result"
            }
          }
        }
      },
      "get": {
        "summary": "query all user",
        "operationId": "-v1-user-get",
        "tags": [
          "User",
          "Administration"
        ],
        "security": [
          {
            "Jwt": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "current page",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "page size",
            "format": "int32"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "order string"
          },
          {
            "name": "need_subscribe_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need subscribe count (user)"
          },
          {
            "name": "need_is_subscribe",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need is subscribe (user)"
          },
          {
            "name": "need_video_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need video count (user)"
          },
          {
            "name": "need_favorite_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need favorite count (user)"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "_Result<_Page<UserDto>>",
              "$ref": "#/definitions/_Result<_Page<UserDto>>"
            }
          }
        }
      },
      "put": {
        "summary": "update a user",
        "operationId": "-v1-user-put",
        "tags": [
          "User"
        ],
        "security": [
          {
            "Jwt": []
          }
        ],
        "parameters": [
          {
            "name": "param",
            "in": "body",
            "required": true,
            "description": "update user parameter",
            "schema": {
              "originRef": "UpdateUserParam",
              "$ref": "#/definitions/UpdateUserParam"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "Result",
              "$ref": "#/definitions/Result"
            }
          }
        }
      }
    },
    "/v1/user/favorite/{vid}": {
      "delete": {
        "summary": "remove video from favorite",
        "operationId": "-v1-user-favorite-vid-delete",
        "tags": [
          "Favorite"
        ],
        "security": [
          {
            "Jwt": []
          }
        ],
        "parameters": [
          {
            "name": "vid",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "vid id",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "Result",
              "$ref": "#/definitions/Result"
            }
          }
        }
      },
      "post": {
        "summary": "add video to favorite",
        "operationId": "-v1-user-favorite-vid-post",
        "tags": [
          "Favorite"
        ],
        "security": [
          {
            "Jwt": []
          }
        ],
        "parameters": [
          {
            "name": "vid",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "vid id",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "Result",
              "$ref": "#/definitions/Result"
            }
          }
        }
      }
    },
    "/v1/user/subscribing/{uid}": {
      "delete": {
        "summary": "unsubscribe user",
        "operationId": "-v1-user-subscribing-uid-delete",
        "tags": [
          "Subscribe"
        ],
        "security": [
          {
            "Jwt": []
          }
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "user id",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "Result",
              "$ref": "#/definitions/Result"
            }
          }
        }
      },
      "post": {
        "summary": "subscribe user",
        "operationId": "-v1-user-subscribing-uid-post",
        "tags": [
          "Subscribe"
        ],
        "security": [
          {
            "Jwt": []
          }
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "user id",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "Result",
              "$ref": "#/definitions/Result"
            }
          }
        }
      }
    },
    "/v1/user/{uid}": {
      "get": {
        "summary": "query a user by uid",
        "operationId": "-v1-user-uid-get",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "user id",
            "format": "int64"
          },
          {
            "name": "need_subscribe_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need subscribe count (user)"
          },
          {
            "name": "need_is_subscribe",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need is subscribe (user)"
          },
          {
            "name": "need_video_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need video count (user)"
          },
          {
            "name": "need_favorite_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need favorite count (user)"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "_Result<UserDto>",
              "$ref": "#/definitions/_Result<UserDto>"
            }
          }
        }
      }
    },
    "/v1/user/{uid}/favorite": {
      "get": {
        "summary": "query user favorites",
        "operationId": "-v1-user-uid-favorite-get",
        "tags": [
          "Favorite"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "user id",
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "current page",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "page size",
            "format": "int32"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "order string"
          },
          {
            "name": "need_author",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need video author (video)"
          },
          {
            "name": "need_favored_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need favored user count (video)"
          },
          {
            "name": "need_is_favorite",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need is favorite (video)"
          },
          {
            "name": "need_subscribe_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need subscribe count (user)"
          },
          {
            "name": "need_is_subscribe",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need is subscribe (user)"
          },
          {
            "name": "need_video_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need video count (user)"
          },
          {
            "name": "need_favorite_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need favorite count (user)"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "_Result<_Page<VideoDto>>",
              "$ref": "#/definitions/_Result<_Page<VideoDto>>"
            }
          }
        }
      }
    },
    "/v1/user/{uid}/subscriber": {
      "get": {
        "summary": "query user subscribers",
        "operationId": "-v1-user-uid-subscriber-get",
        "tags": [
          "Subscribe"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "user id",
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "current page",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "page size",
            "format": "int32"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "order string"
          },
          {
            "name": "need_subscribe_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need subscribe count (user)"
          },
          {
            "name": "need_is_subscribe",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need is subscribe (user)"
          },
          {
            "name": "need_video_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need video count (user)"
          },
          {
            "name": "need_favorite_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need favorite count (user)"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "_Result<_Page<UserDto>>",
              "$ref": "#/definitions/_Result<_Page<UserDto>>"
            }
          }
        }
      }
    },
    "/v1/user/{uid}/subscribing": {
      "get": {
        "summary": "query user subscribings",
        "operationId": "-v1-user-uid-subscribing-get",
        "tags": [
          "Subscribe"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "user id",
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "current page",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "page size",
            "format": "int32"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "order string"
          },
          {
            "name": "need_subscribe_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need subscribe count (user)"
          },
          {
            "name": "need_is_subscribe",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need is subscribe (user)"
          },
          {
            "name": "need_video_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need video count (user)"
          },
          {
            "name": "need_favorite_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need favorite count (user)"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "_Result<_Page<UserDto>>",
              "$ref": "#/definitions/_Result<_Page<UserDto>>"
            }
          }
        }
      }
    },
    "/v1/user/{uid}/video": {
      "get": {
        "summary": "query videos from user",
        "operationId": "-v1-user-uid-video-get",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "user id",
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "current page",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "page size",
            "format": "int32"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "order string"
          },
          {
            "name": "need_author",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need video author (video)"
          },
          {
            "name": "need_favored_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need favored user count (video)"
          },
          {
            "name": "need_is_favorite",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need is favorite (video)"
          },
          {
            "name": "need_subscribe_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need subscribe count (user)"
          },
          {
            "name": "need_is_subscribe",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need is subscribe (user)"
          },
          {
            "name": "need_video_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need video count (user)"
          },
          {
            "name": "need_favorite_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need favorite count (user)"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "_Result<_Page<VideoDto>>",
              "$ref": "#/definitions/_Result<_Page<VideoDto>>"
            }
          }
        }
      }
    },
    "/v1/video": {
      "get": {
        "summary": "query all videos",
        "operationId": "-v1-video-get",
        "tags": [
          "Video",
          "Administration"
        ],
        "security": [
          {
            "Jwt": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "current page",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "page size",
            "format": "int32"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "order string"
          },
          {
            "name": "need_author",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need video author (video)"
          },
          {
            "name": "need_favored_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need favored user count (video)"
          },
          {
            "name": "need_is_favorite",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need is favorite (video)"
          },
          {
            "name": "need_subscribe_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need subscribe count (user)"
          },
          {
            "name": "need_is_subscribe",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need is subscribe (user)"
          },
          {
            "name": "need_video_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need video count (user)"
          },
          {
            "name": "need_favorite_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need favorite count (user)"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "_Result<_Page<VideoDto>>",
              "$ref": "#/definitions/_Result<_Page<VideoDto>>"
            }
          }
        }
      },
      "post": {
        "summary": "create a video",
        "operationId": "-v1-video-post",
        "tags": [
          "Video"
        ],
        "security": [
          {
            "Jwt": []
          }
        ],
        "parameters": [
          {
            "name": "param",
            "in": "body",
            "required": true,
            "description": "create video parameter",
            "schema": {
              "originRef": "InsertVideoParam",
              "$ref": "#/definitions/InsertVideoParam"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "originRef": "Result",
              "$ref": "#/definitions/Result"
            }
          }
        }
      }
    },
    "/v1/video/{vid}": {
      "delete": {
        "summary": "delete a video",
        "operationId": "-v1-video-vid-delete",
        "tags": [
          "Video"
        ],
        "security": [
          {
            "Jwt": []
          }
        ],
        "parameters": [
          {
            "name": "vid",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "video id",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "Result",
              "$ref": "#/definitions/Result"
            }
          }
        }
      },
      "get": {
        "summary": "query a video",
        "operationId": "-v1-video-vid-get",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "vid",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "video id",
            "format": "int64"
          },
          {
            "name": "need_author",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need video author (video)"
          },
          {
            "name": "need_favored_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need favored user count (video)"
          },
          {
            "name": "need_is_favorite",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need is favorite (video)"
          },
          {
            "name": "need_subscribe_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need subscribe count (user)"
          },
          {
            "name": "need_is_subscribe",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need is subscribe (user)"
          },
          {
            "name": "need_video_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need video count (user)"
          },
          {
            "name": "need_favorite_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need favorite count (user)"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "_Result<VideoDto>",
              "$ref": "#/definitions/_Result<VideoDto>"
            }
          }
        }
      },
      "put": {
        "summary": "update a video",
        "operationId": "-v1-video-vid-put",
        "tags": [
          "Video"
        ],
        "security": [
          {
            "Jwt": []
          }
        ],
        "parameters": [
          {
            "name": "vid",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "video id",
            "format": "int64"
          },
          {
            "name": "param",
            "in": "body",
            "required": true,
            "description": "update video parameter",
            "schema": {
              "originRef": "InsertVideoParam",
              "$ref": "#/definitions/InsertVideoParam"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "Result",
              "$ref": "#/definitions/Result"
            }
          }
        }
      }
    },
    "/v1/video/{vid}/favored": {
      "get": {
        "summary": "query video favored users",
        "operationId": "-v1-video-vid-favored-get",
        "tags": [
          "Favorite"
        ],
        "parameters": [
          {
            "name": "vid",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "vid id",
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "current page",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "page size",
            "format": "int32"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "order string"
          },
          {
            "name": "need_subscribe_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need subscribe count (user)"
          },
          {
            "name": "need_is_subscribe",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need is subscribe (user)"
          },
          {
            "name": "need_video_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need video count (user)"
          },
          {
            "name": "need_favorite_count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "need favorite count (user)"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "originRef": "_Result<_Page<UserDto>>",
              "$ref": "#/definitions/_Result<_Page<UserDto>>"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ChangeUserRoleParam": {
      "type": "object",
      "required": [
        "sub"
      ],
      "description": "change role param",
      "properties": {
        "sub": {
          "type": "string",
          "required": true,
          "description": "new subject"
        }
      }
    },
    "InsertVideoParam": {
      "type": "object",
      "required": [
        "title",
        "description",
        "video_url",
        "cover_url"
      ],
      "description": "insert video parameter",
      "properties": {
        "title": {
          "type": "string",
          "required": true,
          "description": "video title"
        },
        "description": {
          "type": "string",
          "required": true,
          "description": "video description"
        },
        "video_url": {
          "type": "string",
          "required": true,
          "description": "video source url",
          "example": "https://aaa.bbb.ccc"
        },
        "cover_url": {
          "type": "string",
          "required": true,
          "description": "video cover url",
          "example": "https://aaa.bbb.ccc"
        }
      }
    },
    "LoginDto": {
      "type": "object",
      "required": [
        "user",
        "token"
      ],
      "description": "login response",
      "properties": {
        "user": {
          "required": true,
          "description": "authorized user",
          "originRef": "UserDto",
          "$ref": "#/definitions/UserDto"
        },
        "token": {
          "type": "string",
          "required": true,
          "description": "access token"
        }
      }
    },
    "LoginParam": {
      "type": "object",
      "required": [
        "parameter",
        "password"
      ],
      "description": "login parameter",
      "properties": {
        "parameter": {
          "type": "string",
          "required": true,
          "description": "login parameter, support uid | username | email"
        },
        "password": {
          "type": "string",
          "required": true,
          "description": "login password"
        }
      }
    },
    "RbacPolicyParam": {
      "type": "object",
      "required": [
        "sub",
        "obj",
        "act"
      ],
      "description": "insert / delete rbac policy param",
      "properties": {
        "sub": {
          "type": "string",
          "required": true,
          "description": "new subject"
        },
        "obj": {
          "type": "string",
          "required": true,
          "description": "new object"
        },
        "act": {
          "type": "string",
          "required": true,
          "description": "new action"
        }
      }
    },
    "RbacRuleDto": {
      "type": "object",
      "required": [
        "p_type",
        "v0",
        "v1",
        "v2",
        "v3",
        "v4",
        "v5"
      ],
      "description": "rbac rule response",
      "properties": {
        "p_type": {
          "type": "string",
          "required": true,
          "description": "rule type"
        },
        "v0": {
          "type": "string",
          "required": true,
          "description": "v0"
        },
        "v1": {
          "type": "string",
          "required": true,
          "description": "v1"
        },
        "v2": {
          "type": "string",
          "required": true,
          "description": "v2"
        },
        "v3": {
          "type": "string",
          "required": true,
          "description": "v3"
        },
        "v4": {
          "type": "string",
          "required": true,
          "description": "v4"
        },
        "v5": {
          "type": "string",
          "required": true,
          "description": "v5"
        }
      }
    },
    "RbacSubjectParam": {
      "type": "object",
      "required": [
        "new",
        "from"
      ],
      "description": "insert / delete rbac subject param",
      "properties": {
        "new": {
          "type": "string",
          "required": true,
          "description": "new subject"
        },
        "from": {
          "type": "string",
          "required": true,
          "description": "subject inherited from"
        }
      }
    },
    "RegisterParam": {
      "type": "object",
      "required": [
        "email",
        "username",
        "password"
      ],
      "description": "register parameter",
      "properties": {
        "email": {
          "type": "string",
          "required": true,
          "description": "register email",
          "example": "aaa@bbb.ccc"
        },
        "username": {
          "type": "string",
          "required": true,
          "description": "register username"
        },
        "password": {
          "type": "string",
          "required": true,
          "description": "register password"
        }
      }
    },
    "Result": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "description": "global response",
      "properties": {
        "code": {
          "type": "integer",
          "required": true,
          "description": "status code",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "required": true,
          "description": "status message"
        }
      }
    },
    "UpdatePasswordParam": {
      "type": "object",
      "required": [
        "old",
        "new"
      ],
      "description": "update password parameter",
      "properties": {
        "old": {
          "type": "string",
          "required": true,
          "description": "old password"
        },
        "new": {
          "type": "string",
          "required": true,
          "description": "new password"
        }
      }
    },
    "UpdateUserParam": {
      "type": "object",
      "required": [
        "username",
        "nickname",
        "gender",
        "profile",
        "birthday",
        "avatar"
      ],
      "description": "update user parameter",
      "properties": {
        "username": {
          "type": "string",
          "required": true,
          "description": "username"
        },
        "nickname": {
          "type": "string",
          "required": true,
          "description": "user nickname"
        },
        "gender": {
          "type": "integer",
          "required": true,
          "description": "user gender, 0X | 1M | 2F",
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ]
        },
        "profile": {
          "type": "string",
          "required": true,
          "description": "user profile",
          "allowEmptyValue": true
        },
        "birthday": {
          "type": "string",
          "required": true,
          "description": "user birthday",
          "format": "date",
          "example": "2000-01-01"
        },
        "avatar": {
          "type": "string",
          "required": true,
          "description": "user avatar",
          "example": "https://aaa.bbb.ccc"
        }
      }
    },
    "UserDto": {
      "type": "object",
      "required": [
        "uid",
        "username",
        "email",
        "nickname",
        "gender",
        "profile",
        "avatar",
        "birthday",
        "role",
        "state",
        "register_time",
        "extra"
      ],
      "description": "user response",
      "properties": {
        "uid": {
          "type": "integer",
          "required": true,
          "description": "user id",
          "format": "int64"
        },
        "username": {
          "type": "string",
          "required": true,
          "description": "username"
        },
        "email": {
          "type": "string",
          "required": true,
          "description": "user email"
        },
        "nickname": {
          "type": "string",
          "required": true,
          "description": "user nickname"
        },
        "gender": {
          "type": "string",
          "required": true,
          "description": "user gender",
          "enum": [
            "secret",
            "male",
            "female"
          ]
        },
        "profile": {
          "type": "string",
          "required": true,
          "description": "user profile",
          "allowEmptyValue": true
        },
        "avatar": {
          "type": "string",
          "required": true,
          "description": "user avatar"
        },
        "birthday": {
          "type": "string",
          "required": true,
          "description": "user birthday",
          "format": "date"
        },
        "role": {
          "type": "string",
          "required": true,
          "description": "user role"
        },
        "state": {
          "type": "string",
          "required": true,
          "description": "user state"
        },
        "register_time": {
          "type": "string",
          "required": true,
          "description": "user register time",
          "format": "date-time"
        },
        "extra": {
          "required": true,
          "description": "user extra information",
          "originRef": "UserExtraDto",
          "$ref": "#/definitions/UserExtraDto"
        }
      }
    },
    "UserExtraDto": {
      "type": "object",
      "required": [
        "subscribings",
        "subscribers",
        "is_subscribing",
        "is_subscribed",
        "is_blocking",
        "videos",
        "favorites"
      ],
      "description": "user extra response",
      "properties": {
        "subscribings": {
          "type": "integer",
          "required": true,
          "description": "user subscribing count",
          "format": "int32"
        },
        "subscribers": {
          "type": "integer",
          "required": true,
          "description": "user subscriber count",
          "format": "int32"
        },
        "is_subscribing": {
          "type": "boolean",
          "required": true,
          "description": "authorized user is subscribing this user"
        },
        "is_subscribed": {
          "type": "boolean",
          "required": true,
          "description": "authorized user is subscribed by this user"
        },
        "is_blocking": {
          "type": "boolean",
          "required": true,
          "description": "authorized user is blocking this user"
        },
        "videos": {
          "type": "integer",
          "required": true,
          "description": "user video count",
          "format": "int32"
        },
        "favorites": {
          "type": "integer",
          "required": true,
          "description": "user favorite count",
          "format": "int32"
        }
      }
    },
    "VideoDto": {
      "type": "object",
      "required": [
        "vid",
        "title",
        "description",
        "video_url",
        "cover_url",
        "upload_time",
        "author",
        "extra"
      ],
      "description": "video response",
      "properties": {
        "vid": {
          "type": "integer",
          "required": true,
          "description": "video id",
          "format": "int64"
        },
        "title": {
          "type": "string",
          "required": true,
          "description": "video title"
        },
        "description": {
          "type": "string",
          "required": true,
          "description": "video description"
        },
        "video_url": {
          "type": "string",
          "required": true,
          "description": "video source url"
        },
        "cover_url": {
          "type": "string",
          "required": true,
          "description": "video cover url"
        },
        "upload_time": {
          "type": "string",
          "required": true,
          "description": "video upload time",
          "format": "date-time"
        },
        "author": {
          "required": true,
          "description": "video author",
          "originRef": "UserDto",
          "$ref": "#/definitions/UserDto"
        },
        "extra": {
          "required": true,
          "description": "video extra information",
          "originRef": "VideoExtraDto",
          "$ref": "#/definitions/VideoExtraDto"
        }
      }
    },
    "VideoExtraDto": {
      "type": "object",
      "required": [
        "favoreds",
        "is_favorite"
      ],
      "description": "video extra response",
      "properties": {
        "favoreds": {
          "type": "integer",
          "required": true,
          "description": "video favored user count",
          "format": "int32"
        },
        "is_favorite": {
          "type": "boolean",
          "required": true,
          "description": "this video is in authorized user favorite list"
        }
      }
    },
    "_Page<RbacRuleDto>": {
      "type": "object",
      "required": [
        "page",
        "limit",
        "total",
        "data"
      ],
      "description": "page response",
      "properties": {
        "page": {
          "type": "integer",
          "required": true,
          "description": "current page",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "required": true,
          "description": "page size",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "required": true,
          "description": "data count",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "required": true,
          "description": "page data",
          "items": {
            "originRef": "RbacRuleDto",
            "$ref": "#/definitions/RbacRuleDto"
          }
        }
      }
    },
    "_Page<UserDto>": {
      "type": "object",
      "required": [
        "page",
        "limit",
        "total",
        "data"
      ],
      "description": "page response",
      "properties": {
        "page": {
          "type": "integer",
          "required": true,
          "description": "current page",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "required": true,
          "description": "page size",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "required": true,
          "description": "data count",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "required": true,
          "description": "page data",
          "items": {
            "originRef": "UserDto",
            "$ref": "#/definitions/UserDto"
          }
        }
      }
    },
    "_Page<VideoDto>": {
      "type": "object",
      "required": [
        "page",
        "limit",
        "total",
        "data"
      ],
      "description": "page response",
      "properties": {
        "page": {
          "type": "integer",
          "required": true,
          "description": "current page",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "required": true,
          "description": "page size",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "required": true,
          "description": "data count",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "required": true,
          "description": "page data",
          "items": {
            "originRef": "VideoDto",
            "$ref": "#/definitions/VideoDto"
          }
        }
      }
    },
    "_Result<LoginDto>": {
      "type": "object",
      "required": [
        "code",
        "message",
        "data"
      ],
      "description": "global response",
      "properties": {
        "code": {
          "type": "integer",
          "required": true,
          "description": "status code",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "required": true,
          "description": "status message"
        },
        "data": {
          "required": true,
          "description": "response data",
          "originRef": "LoginDto",
          "$ref": "#/definitions/LoginDto"
        }
      }
    },
    "_Result<UserDto>": {
      "type": "object",
      "required": [
        "code",
        "message",
        "data"
      ],
      "description": "global response",
      "properties": {
        "code": {
          "type": "integer",
          "required": true,
          "description": "status code",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "required": true,
          "description": "status message"
        },
        "data": {
          "required": true,
          "description": "response data",
          "originRef": "UserDto",
          "$ref": "#/definitions/UserDto"
        }
      }
    },
    "_Result<VideoDto>": {
      "type": "object",
      "required": [
        "code",
        "message",
        "data"
      ],
      "description": "global response",
      "properties": {
        "code": {
          "type": "integer",
          "required": true,
          "description": "status code",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "required": true,
          "description": "status message"
        },
        "data": {
          "required": true,
          "description": "response data",
          "originRef": "VideoDto",
          "$ref": "#/definitions/VideoDto"
        }
      }
    },
    "_Result<_Page<RbacRuleDto>>": {
      "type": "object",
      "required": [
        "code",
        "message",
        "data"
      ],
      "description": "global response",
      "properties": {
        "code": {
          "type": "integer",
          "required": true,
          "description": "status code",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "required": true,
          "description": "status message"
        },
        "data": {
          "required": true,
          "description": "response data",
          "originRef": "_Page\u003cRbacRuleDto\u003e",
          "$ref": "#/definitions/_Page\u003cRbacRuleDto\u003e"
        }
      }
    },
    "_Result<_Page<UserDto>>": {
      "type": "object",
      "required": [
        "code",
        "message",
        "data"
      ],
      "description": "global response",
      "properties": {
        "code": {
          "type": "integer",
          "required": true,
          "description": "status code",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "required": true,
          "description": "status message"
        },
        "data": {
          "required": true,
          "description": "response data",
          "originRef": "_Page\u003cUserDto\u003e",
          "$ref": "#/definitions/_Page\u003cUserDto\u003e"
        }
      }
    },
    "_Result<_Page<VideoDto>>": {
      "type": "object",
      "required": [
        "code",
        "message",
        "data"
      ],
      "description": "global response",
      "properties": {
        "code": {
          "type": "integer",
          "required": true,
          "description": "status code",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "required": true,
          "description": "status message"
        },
        "data": {
          "required": true,
          "description": "response data",
          "originRef": "_Page\u003cVideoDto\u003e",
          "$ref": "#/definitions/_Page\u003cVideoDto\u003e"
        }
      }
    }
  }
}
